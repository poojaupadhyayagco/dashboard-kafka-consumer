version: '3'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    logging:
      driver: none

  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR=1
      - CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS=kafka:29092
      - CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT=zookeeper:2181
      - CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS=1
      - CONFLUENT_METRICS_ENABLE="true"
      - CONFLUENT_SUPPORT_CUSTOMER_ID=anonymous
    logging:
      driver: none

  schema-registry:
    image: confluentinc/cp-schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181

  control-center:
    image: confluentinc/cp-enterprise-control-center
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      - CONTROL_CENTER_BOOTSTRAP_SERVERS=kafka:9092
      - CONTROL_CENTER_ZOOKEEPER_CONNECT=zookeeper:2181
      - CONTROL_CENTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - CONTROL_CENTER_REPLICATION_FACTOR=1
      - CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS=1
      - CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS=1
      - CONFLUENT_METRICS_TOPIC_REPLICATION=1
      - PORT=9021

  app-db:
    image: postgres:10
    expose:
      - "5432"
    ports:
      - "5432:5432"
    env_file:
      - ./db.env
    volumes:
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
